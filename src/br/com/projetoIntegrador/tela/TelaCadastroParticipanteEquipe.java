/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projetoIntegrador.tela;

import br.com.projetoIntegrador.dao.CampeonatoDaoImpl;
import br.com.projetoIntegrador.dao.EquipeDaoImpl;
import br.com.projetoIntegrador.dao.ParticipanteDaoImpl;
import br.com.projetoIntegrador.entidade.Campeonato;
import br.com.projetoIntegrador.entidade.Endereco;
import br.com.projetoIntegrador.entidade.Equipe;
import br.com.projetoIntegrador.entidade.Participante;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author lucca
 */
public class TelaCadastroParticipanteEquipe extends javax.swing.JFrame {

    /**
     * Creates new form TelaCadastroParticipanteEquipe
     */
    public TelaCadastroParticipanteEquipe() {
        initComponents();
        CampeonatoDaoImpl campDao = new CampeonatoDaoImpl();
        Campeonato campeonato = new Campeonato();
        Equipe equipe = new Equipe();
        EquipeDaoImpl equipeDao = new EquipeDaoImpl();

        List<Campeonato> campeonatos = campDao.pesquisarCampeonatos(campeonato);
        for (Campeonato camp : campeonatos) {
            varCampeonatoDisputa.addItem(camp);
        }

        List<Equipe> equipes = equipeDao.pesquisarEquipes(equipe);
        for (Equipe equipe1 : equipes) {
            varEscolhaEquipe.addItem(equipe1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTituloPrincipal = new javax.swing.JLabel();
        lbCadastroEquipe = new javax.swing.JLabel();
        lbNomeEquipe = new javax.swing.JLabel();
        varNomeEquipe = new javax.swing.JTextField();
        lbCampeonatoDisputa = new javax.swing.JLabel();
        lbCadastroEquipe1 = new javax.swing.JLabel();
        btSalvarEquipe = new javax.swing.JButton();
        btLimparEquipe = new javax.swing.JButton();
        lbNomeParticipante = new javax.swing.JLabel();
        varNomeParticipante = new javax.swing.JTextField();
        lbEstadoParticipante = new javax.swing.JLabel();
        varEstadoParticipante = new javax.swing.JTextField();
        varBairroParticipante = new javax.swing.JTextField();
        lbBairroParticipante = new javax.swing.JLabel();
        lbCepParticipante = new javax.swing.JLabel();
        varCepParticipante = new javax.swing.JFormattedTextField();
        varComplementoParticipante = new javax.swing.JTextField();
        lbComplementoParticipante = new javax.swing.JLabel();
        varDataParticipante = new javax.swing.JFormattedTextField();
        lbDataParticipante = new javax.swing.JLabel();
        lbCpfParticipante = new javax.swing.JLabel();
        varCpfParticipante = new javax.swing.JFormattedTextField();
        lbTelefoneParticipante = new javax.swing.JLabel();
        varTelefoneParticipante = new javax.swing.JFormattedTextField();
        varLogradouroParticipante = new javax.swing.JTextField();
        lbLogradouroParticipante = new javax.swing.JLabel();
        lbCidadeParticipante = new javax.swing.JLabel();
        varCidadeParticipante = new javax.swing.JTextField();
        varEscolhaEquipe = new javax.swing.JComboBox<>();
        lbEquipeParticipante = new javax.swing.JLabel();
        btSalvarParticipante = new javax.swing.JButton();
        btLimparParticipante = new javax.swing.JButton();
        btVoltarAoMenu = new javax.swing.JButton();
        varCampeonatoDisputa = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbTituloPrincipal.setFont(new java.awt.Font("Ink Free", 0, 50)); // NOI18N
        lbTituloPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTituloPrincipal.setText("Cadastro Participante e equipe");

        lbCadastroEquipe.setFont(new java.awt.Font("Ink Free", 1, 18)); // NOI18N
        lbCadastroEquipe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCadastroEquipe.setText("Cadastro Da Equipe");

        lbNomeEquipe.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbNomeEquipe.setForeground(new java.awt.Color(102, 102, 102));
        lbNomeEquipe.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbNomeEquipe.setText("Nome Da Equipe:");

        lbCampeonatoDisputa.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbCampeonatoDisputa.setForeground(new java.awt.Color(102, 102, 102));
        lbCampeonatoDisputa.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbCampeonatoDisputa.setText("Campeonato De Disputa:");

        lbCadastroEquipe1.setFont(new java.awt.Font("Ink Free", 1, 18)); // NOI18N
        lbCadastroEquipe1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCadastroEquipe1.setText("Cadastro De Participante");

        btSalvarEquipe.setText("Salvar");
        btSalvarEquipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarEquipeActionPerformed(evt);
            }
        });

        btLimparEquipe.setText("Limpar");
        btLimparEquipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparEquipeActionPerformed(evt);
            }
        });

        lbNomeParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbNomeParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbNomeParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbNomeParticipante.setText("Nome Do Participante:");

        lbEstadoParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbEstadoParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbEstadoParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbEstadoParticipante.setText("Estado:");

        lbBairroParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbBairroParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbBairroParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbBairroParticipante.setText("Bairro:");

        lbCepParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbCepParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbCepParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbCepParticipante.setText("Cep:");

        try {
            varCepParticipante.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lbComplementoParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbComplementoParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbComplementoParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbComplementoParticipante.setText("Complemento:");

        try {
            varDataParticipante.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lbDataParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbDataParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbDataParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbDataParticipante.setText("Data De Nascimento:");

        lbCpfParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbCpfParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbCpfParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbCpfParticipante.setText("Cpf:");

        try {
            varCpfParticipante.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lbTelefoneParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbTelefoneParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbTelefoneParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbTelefoneParticipante.setText("Telefone (wpp):");

        try {
            varTelefoneParticipante.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lbLogradouroParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbLogradouroParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbLogradouroParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbLogradouroParticipante.setText("Logradouro:");

        lbCidadeParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbCidadeParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbCidadeParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbCidadeParticipante.setText("Cidade:");

        lbEquipeParticipante.setFont(new java.awt.Font("Ink Free", 1, 16)); // NOI18N
        lbEquipeParticipante.setForeground(new java.awt.Color(102, 102, 102));
        lbEquipeParticipante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbEquipeParticipante.setText("Escolha Sua Equipe:");

        btSalvarParticipante.setText("Salvar");
        btSalvarParticipante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarParticipanteActionPerformed(evt);
            }
        });

        btLimparParticipante.setText("Limpar");
        btLimparParticipante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparParticipanteActionPerformed(evt);
            }
        });

        btVoltarAoMenu.setText("Voltar ao Menu");
        btVoltarAoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarAoMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbTituloPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbCadastroEquipe1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(168, 168, 168))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbNomeParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(varNomeParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbDataParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(varDataParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbCpfParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(varCpfParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbTelefoneParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(varTelefoneParticipante)))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbComplementoParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(varComplementoParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbEstadoParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(varEstadoParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lbBairroParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lbCepParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(varCepParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(varBairroParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbLogradouroParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbEquipeParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(varLogradouroParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(varEscolhaEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbCidadeParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(varCidadeParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btSalvarParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(45, 45, 45)
                                            .addComponent(btLimparParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbCampeonatoDisputa, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(lbNomeEquipe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(varNomeEquipe, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(varCampeonatoDisputa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(89, 89, 89)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btSalvarEquipe, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(btLimparEquipe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbCadastroEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(274, 274, 274))
            .addGroup(layout.createSequentialGroup()
                .addGap(318, 318, 318)
                .addComponent(btVoltarAoMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTituloPrincipal)
                .addGap(18, 18, 18)
                .addComponent(lbCadastroEquipe)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNomeEquipe)
                    .addComponent(varNomeEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSalvarEquipe))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCampeonatoDisputa)
                    .addComponent(btLimparEquipe)
                    .addComponent(varCampeonatoDisputa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(lbCadastroEquipe1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(varNomeParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbNomeParticipante))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbEstadoParticipante)
                            .addComponent(varEstadoParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbBairroParticipante)
                            .addComponent(varBairroParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(varDataParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDataParticipante))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(varCepParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbCepParticipante)
                            .addComponent(varCpfParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbCpfParticipante))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(varComplementoParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbComplementoParticipante)
                            .addComponent(varTelefoneParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTelefoneParticipante))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbLogradouroParticipante)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(varCidadeParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbCidadeParticipante)
                        .addComponent(varLogradouroParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(varEscolhaEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbEquipeParticipante)
                    .addComponent(btSalvarParticipante)
                    .addComponent(btLimparParticipante))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(btVoltarAoMenu)
                .addGap(24, 24, 24))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Salvar Equipe
    private void btSalvarEquipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarEquipeActionPerformed
        if (!validarFormularioEquipe()) {
            EquipeDaoImpl equipeDaoImpl = new EquipeDaoImpl();
            Equipe equipe = new Equipe();

            equipe.setNome(varNomeEquipe.getText().trim());
            Campeonato camp = (Campeonato) varCampeonatoDisputa.getSelectedItem();
            equipe.setCampeonato(camp);
            try {
                equipeDaoImpl.salvar(equipe);
                JOptionPane.showMessageDialog(null, "Salvo com sucesso!!");
                limparEquipe();
            } catch (SQLException ex) {
                System.out.println("Erro ao salvar Equipe: " + ex);
            }
        }
    }//GEN-LAST:event_btSalvarEquipeActionPerformed

    private void btLimparEquipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparEquipeActionPerformed
        limparEquipe();
    }//GEN-LAST:event_btLimparEquipeActionPerformed

    private void limparEquipe() {
        varNomeEquipe.setText("");
    }

    private boolean validarFormularioEquipe() {
        String nomeEquipe = varNomeEquipe.getText().trim();
        if (validarCampoVazio(nomeEquipe)) {
            JOptionPane.showMessageDialog(null, "Nome da Equipe invalido!!");
            return true;
        }
        return false;
    }

    //Salvar participante
    private void btSalvarParticipanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarParticipanteActionPerformed
        if (!validarFormularioParticipante()) {
            Participante participante = new Participante();
            ParticipanteDaoImpl participanteDaoImpl = new ParticipanteDaoImpl();

            participante.setNome(varNomeParticipante.getText().trim());
            participante.setCpf(varCpfParticipante.getText().trim());
            participante.setTelefone(varTelefoneParticipante.getText().trim());
            participante.setNascimento(converterDateCampeonato(varDataParticipante.getText().trim()));
            Equipe equipe = (Equipe) varEscolhaEquipe.getSelectedItem();
            participante.setEquipe(equipe);

            Endereco endereco = new Endereco();
            endereco.setLogradouro(varLogradouroParticipante.getText().trim());
            endereco.setBairro(varBairroParticipante.getText().trim());
            endereco.setCidade(varCidadeParticipante.getText().trim());
            endereco.setCep(varCepParticipante.getText().trim());
            endereco.setEstado(varEstadoParticipante.getText().trim());
            endereco.setComplemento(varComplementoParticipante.getText().trim());

            participante.setEndereco(endereco);

            try {
                participanteDaoImpl.salvar(participante);
                JOptionPane.showMessageDialog(null, "Salvo com sucesso!!");
                limparParticipante();
            } catch (Exception ex) {
                System.out.println("Erro ao salvar participante: " + ex);
            }
        }
    }//GEN-LAST:event_btSalvarParticipanteActionPerformed

    private void btLimparParticipanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparParticipanteActionPerformed
        limparParticipante();
    }//GEN-LAST:event_btLimparParticipanteActionPerformed

    private void btVoltarAoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarAoMenuActionPerformed
        new TelaPrincipal().setVisible(true);
        dispose();
    }//GEN-LAST:event_btVoltarAoMenuActionPerformed

    private void limparParticipante() {
        varNomeParticipante.setText("");
        varCpfParticipante.setText("");
        varDataParticipante.setText("");
        varTelefoneParticipante.setText("");
        varLogradouroParticipante.setText("");
        varBairroParticipante.setText("");
        varEstadoParticipante.setText("");
        varCepParticipante.setText("");
        varComplementoParticipante.setText("");
        varCidadeParticipante.setText("");

    }

    private boolean validarFormularioParticipante() {
        if (validarAlgunsCamposVaziosParticipante()) {
            return true;
        }

        if (validarCpf()) {
            JOptionPane.showMessageDialog(null, "Cpf inválido!!");
            return true;
        }
        if (validarDiaData()) {
            JOptionPane.showMessageDialog(null, "Dia inválido!!");
            return true;
        }
        if (validarMesData()) {
            JOptionPane.showMessageDialog(null, "Mes inválido!!");
            return true;
        }
        if (validarAnoData()) {
            JOptionPane.showMessageDialog(null, "Ano inválido!!");
            return true;
        }
        if (validarData()) {
            JOptionPane.showMessageDialog(null, "Data de nascimento inválida!!");
            return true;
        }
        if (validarTelefone()) {
            JOptionPane.showMessageDialog(null, "Telefone inválido!!");
            return true;
        }
        if (validarCep()) {
            JOptionPane.showMessageDialog(null, "Cep inválido!!");
            return true;
        }
        //Falta passar a equipe

        return false;
    }

    private boolean validarAlgunsCamposVaziosParticipante() {

        String nome = varNomeParticipante.getText().trim();
        String logradouro = varLogradouroParticipante.getText().trim();
        String estado = varEstadoParticipante.getText().trim();
        String cidade = varCidadeParticipante.getText().trim();
        String bairro = varBairroParticipante.getText().trim();

        if (validarCampoVazio(nome)) {
            JOptionPane.showMessageDialog(null, "Nome do Participante inválido!!");
            return true;
        }
        if (validarCampoVazio(logradouro)) {
            JOptionPane.showMessageDialog(null, "Logradouro inválido!!");
            return true;
        }
        if (validarCampoVazio(estado)) {
            JOptionPane.showMessageDialog(null, "Estado inválido!!");
            return true;
        }
        if (validarCampoVazio(cidade)) {
            JOptionPane.showMessageDialog(null, "Cidade inválida!!");
            return true;
        }
        if (validarCampoVazio(bairro)) {
            JOptionPane.showMessageDialog(null, "Bairro inválido!!");
            return true;
        }
        return false;
    }

    private boolean validarCpf() {
        String cpf = varCpfParticipante.getText().trim();
        return cpf.equals("-   -   -");
    }

    private boolean validarData() {
        String data = varDataParticipante.getText().trim();
        return data.equals("/  /");
    }

    private boolean validarTelefone() {
        String telefone = varTelefoneParticipante.getText().trim();

        return telefone.equals("(  )     -");
    }

    private boolean validarCep() {
        String cep = varCepParticipante.getText().trim();
        return cep.equals("-");
    }

    private boolean validarCampoVazio(String valorCampo) {
        return valorCampo.equals("");
    }

    private boolean validarDiaData() {
        String data = varDataParticipante.getText().trim();
        int dias = Integer.parseInt(data.substring(0, 2));
        return dias > 31;
    }

    private boolean validarMesData() {
        String data = varDataParticipante.getText().trim();
        int mes = Integer.parseInt(data.substring(3, 5));
        return mes > 12;
    }

    private boolean validarAnoData() {
        String data = varDataParticipante.getText().trim();
        int ano = Integer.parseInt(data.substring(6, 10));
        return ano < 2021;
    }

    private Date converterDateCampeonato(String dateParaConverter) {
        String[] dateSeparado = dateParaConverter.split("/");
        LocalDate stringConvertidoParaLocalDate = LocalDate.of(
                Integer.parseInt(dateSeparado[2]),
                Integer.parseInt(dateSeparado[1]),
                Integer.parseInt(dateSeparado[0]));

        ZonedDateTime localConvertidoParaZoned = stringConvertidoParaLocalDate.atStartOfDay(ZoneId.systemDefault());

        Date zonedConvertidoParaDate = Date.from(localConvertidoParaZoned.toInstant());

        return zonedConvertidoParaDate;

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroParticipanteEquipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroParticipanteEquipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroParticipanteEquipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroParticipanteEquipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroParticipanteEquipe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btLimparEquipe;
    private javax.swing.JButton btLimparParticipante;
    private javax.swing.JButton btSalvarEquipe;
    private javax.swing.JButton btSalvarParticipante;
    private javax.swing.JButton btVoltarAoMenu;
    private javax.swing.JLabel lbBairroParticipante;
    private javax.swing.JLabel lbCadastroEquipe;
    private javax.swing.JLabel lbCadastroEquipe1;
    private javax.swing.JLabel lbCampeonatoDisputa;
    private javax.swing.JLabel lbCepParticipante;
    private javax.swing.JLabel lbCidadeParticipante;
    private javax.swing.JLabel lbComplementoParticipante;
    private javax.swing.JLabel lbCpfParticipante;
    private javax.swing.JLabel lbDataParticipante;
    private javax.swing.JLabel lbEquipeParticipante;
    private javax.swing.JLabel lbEstadoParticipante;
    private javax.swing.JLabel lbLogradouroParticipante;
    private javax.swing.JLabel lbNomeEquipe;
    private javax.swing.JLabel lbNomeParticipante;
    private javax.swing.JLabel lbTelefoneParticipante;
    private javax.swing.JLabel lbTituloPrincipal;
    private javax.swing.JTextField varBairroParticipante;
    private javax.swing.JComboBox<Object> varCampeonatoDisputa;
    private javax.swing.JFormattedTextField varCepParticipante;
    private javax.swing.JTextField varCidadeParticipante;
    private javax.swing.JTextField varComplementoParticipante;
    private javax.swing.JFormattedTextField varCpfParticipante;
    private javax.swing.JFormattedTextField varDataParticipante;
    private javax.swing.JComboBox<Object> varEscolhaEquipe;
    private javax.swing.JTextField varEstadoParticipante;
    private javax.swing.JTextField varLogradouroParticipante;
    private javax.swing.JTextField varNomeEquipe;
    private javax.swing.JTextField varNomeParticipante;
    private javax.swing.JFormattedTextField varTelefoneParticipante;
    // End of variables declaration//GEN-END:variables
}
